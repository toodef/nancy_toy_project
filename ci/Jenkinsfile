pipeline {
    agent { label 'gpu' }

    triggers {
        gitlab(triggerOnMergeRequest: true, branchFilterType: 'All', noteRegex: "run train", triggerOnPush: false)
    }

    environment {
        GIT_COMMIT_SHORT = sh(
            script: "git log -n 1 --pretty=format:'%h'",
            returnStdout: true
        ).trim()
//         IMAGE_NAME="jenkins-gs-${env.gitlabBranch}-${env.BUILD_NUMBER}-$GIT_COMMIT_SHORT"
        IMAGE_NAME="jenkins-toy"
        CREDENTIALS_ID='21d5124e-86bb-43b4-b89a-3214cfcfbcf5'
    }

    stages {
        stage('build') {
            // gitlabCommitStatus("running")
            steps {
                sh "git checkout " + env.BRANCH_NAME
                sh "docker build -t $IMAGE_NAME -f docker/Dockerfile ."
            }
        }
        stage('pull data') {
            steps {
                sh "docker run --rm -i --runtime=nvidia -v /etc/localtime:/etc/localtime:ro -v `pwd`:/app --entrypoint dvc $IMAGE_NAME pull -r s3_local artifacts/dataset.dvc"
            }
        }

        stage('train') {
            steps {
                sh "docker run --rm -i --runtime=nvidia --shm-size 8G -v /etc/localtime:/etc/localtime:ro -v `pwd`:/app --entrypoint dvc $IMAGE_NAME repro"
            }
        }

        stage('push') {
            steps {
                sh "docker run --rm -i --runtime=nvidia -v /etc/localtime:/etc/localtime:ro -v `pwd`:/app --entrypoint dvc $IMAGE_NAME push -r s3_local"
                sh "find artifacts -name '*.dvc' -print0 | xargs -0 git add"
                sh "git add dvc.lock"
                sh '''
                    git config user.name "toodef"
                    git config user.email "fedotov.atnon.af@gmail.com"
                    '''
                sh "git commit -a -m 'train done'"

                withCredentials([usernamePassword(credentialsId: env.CREDENTIALS_ID,
                                                  passwordVariable: 'GIT_PASSWORD',
                                                  usernameVariable: 'GIT_USERNAME')]) {
                        sh('git push http://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/toodef/nancy_toy_project.git')
                    }
            }
        }

        stage('clean') {
            steps {
                sh "docker rmi $IMAGE_NAME"
            }
        }
    }
}
